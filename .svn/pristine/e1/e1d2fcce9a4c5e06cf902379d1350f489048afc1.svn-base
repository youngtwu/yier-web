package com.yier.platform.controller;

import com.yier.platform.annotation.ApiCheck;
import com.yier.platform.common.jsonResponse.CommonResponse;
import com.yier.platform.common.jsonResponse.ListResponse;
import com.yier.platform.common.model.*;
import com.yier.platform.common.requestParam.*;
import com.yier.platform.common.util.Utils;
import com.yier.platform.service.feign.RemoteService;
import com.yier.platform.service.medical.*;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.tuple.MutableTriple;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Date;
import java.util.List;

@ApiModel(value = "上门就诊相关的请求接口")
@RestController
@RequestMapping("/medicalOrder")
@Slf4j
public class MedicalOrderController {
    @Autowired
    private MedicalOrderService medicalOrderService;
    @Autowired
    private MedicalDateService serviceMedicalDateService;
    @Autowired
    private MedicalPrescriptionService medicalPrescriptionService;
    @Autowired
    private DiseaseCodeService diseaseCodeService;
    @Autowired
    private DoctorDiseaseService doctorDiseaseService;
    @Autowired
    private RemoteService remoteService;
    @Autowired
    private DrugTakeOrderService drugTakeOrderService;
    @Autowired
    private DrugSendOrderService drugSendOrderService;
    @Autowired
    private DrugAcceptOrderService drugAcceptOrderService;
    //---------------------------------------预约药房送药-----------------------------------------
    @ApiOperation(value = "药师端 点击完成送药 ")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugAcceptOrderSendOk.json", method = {RequestMethod.POST})
    public CommonResponse<DrugAcceptOrder> drugAcceptOrderSendOk(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "点击接单请求接口") @RequestBody DrugAcceptOrder record) {
        CommonResponse<DrugAcceptOrder> result = new CommonResponse<DrugAcceptOrder>();
        result.setData(drugAcceptOrderService.createAcceptOrderToSendOK(record));
        return result;
    }
    @ApiOperation(value = "药师端 点击开始送药 ")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugAcceptOrderSending.json", method = {RequestMethod.POST})
    public CommonResponse<DrugAcceptOrder> drugAcceptOrderSending(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "点击接单请求接口") @RequestBody DrugAcceptOrder record) {
        CommonResponse<DrugAcceptOrder> result = new CommonResponse<DrugAcceptOrder>();
        result.setData(drugAcceptOrderService.createAcceptOrderToSending(record));
        return result;
    }
    @ApiOperation(value = "药师端 点击接单 送药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugAcceptOrder.json", method = {RequestMethod.POST})
    public CommonResponse<DrugAcceptOrder> drugAcceptOrder(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "点击接单请求接口") @RequestBody DrugAcceptOrder record) {
        CommonResponse<DrugAcceptOrder> result = new CommonResponse<DrugAcceptOrder>();
        result.setData(drugAcceptOrderService.createAcceptOrder(record));
        return result;
    }
   @ApiOperation(value = "药师端 预约药房送药订单列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugAcceptOrderList.json", method = {RequestMethod.POST})
    public ListResponse<DrugAcceptOrder> drugAcceptOrderList(HttpServletRequest request, HttpServletResponse response,
                                                         @ApiParam(value = "患者取药请求接口") @RequestBody DrugSendOrderRequest params) {
        params.doWithSortOrStart();
        ListResponse<DrugAcceptOrder> result = new ListResponse<DrugAcceptOrder>();
        result.setData(drugAcceptOrderService.listDrugAcceptOrder(params));
        result.setTotal(drugAcceptOrderService.listDrugAcceptOrderCount(params));
        return result;
    }

    @ApiOperation(value = "患者端显示 预约药房送药订单列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugSendOrderList.json", method = {RequestMethod.POST})
    public ListResponse<DrugSendOrderPo> drugSendOrderList(HttpServletRequest request, HttpServletResponse response,
                                                         @ApiParam(value = "患者取药请求接口") @RequestBody DrugSendOrderRequest params) {
        params.doWithSortOrStart();
        ListResponse<DrugSendOrderPo> result = new ListResponse<DrugSendOrderPo>();
        result.setData(drugSendOrderService.drugSendOrderListWithDrug(params));
        result.setTotal(drugSendOrderService.listDrugSendOrderPoCount(params));
        return result;
    }
    @ApiOperation(value = "创建患者确认送药 收货完成")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugSendOrderOK.json", method = {RequestMethod.POST})
    public CommonResponse<DrugSendOrder> drugSendOrderOK(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugSendOrder record) {
        CommonResponse<DrugSendOrder> result = new CommonResponse<DrugSendOrder>();
        drugSendOrderService.drugSendOrderOK(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "创建预约药房送药订单 取消订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugSendOrderCancel.json", method = {RequestMethod.POST})
    public CommonResponse<DrugSendOrder> drugSendOrderCancel(HttpServletRequest request, HttpServletResponse response,
                                                                @ApiParam(value = "患者取药接口") @RequestBody DrugSendOrder record) {
        CommonResponse<DrugSendOrder> result = new CommonResponse<DrugSendOrder>();
        drugSendOrderService.drugSendOrderCancel(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "创建预约药房送药订单 支付成功")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugSendOrderPaymentOk.json", method = {RequestMethod.POST})
    public CommonResponse<DrugSendOrder> drugSendOrderPaymentOk(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugSendOrder record) {
        CommonResponse<DrugSendOrder> result = new CommonResponse<DrugSendOrder>();
        drugSendOrderService.drugSendOrderPaymentOk(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "创建预约药房送药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugSendOrderCreate.json", method = {RequestMethod.POST})
    public CommonResponse<DrugSendOrder> drugSendOrderCreate(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugSendOrder record) {
        CommonResponse<DrugSendOrder> result = new CommonResponse<DrugSendOrder>();
        result.setData(drugSendOrderService.drugSendOrderCreate(record));
        return result;
    }
    @ApiOperation(value = "显示送药多个处方取药的列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/listPrescriptionSendShow.json", method = {RequestMethod.POST})
    public CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,Integer,Integer>> listPrescriptionSendShow(HttpServletRequest request, HttpServletResponse response,
                                                                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescriptionRequest params) {
        CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,Integer,Integer>> result = new CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,Integer,Integer>>();
        result.setData(medicalPrescriptionService.drugSendOrderShow(params));
        log.info("显示送药多个处方取药的列表:{}",result);
        return result;
    }
    //---------------------------------------预约药房取药-----------------------------------------
    @ApiOperation(value = "显示取药多个处方取药的列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/listPrescriptionShow.json", method = {RequestMethod.POST})
    public CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,List<String>,Integer>> listPrescriptionShow(HttpServletRequest request, HttpServletResponse response,
                                                                                                             @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescriptionRequest params) {
        CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,List<String>,Integer>> result = new CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,List<String>,Integer>>();
        result.setData(medicalPrescriptionService.drugTakeOrderTakeShow(params));
        return result;
    }


    @ApiOperation(value = "预约药房取药订单列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderList.json", method = {RequestMethod.POST})
    public ListResponse<DrugTakeOrder> drugTakeOrderList(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药请求接口") @RequestBody DrugTakeOrderRequest params) {
        params.doWithSortOrStart();
        ListResponse<DrugTakeOrder> result = new ListResponse<DrugTakeOrder>();
        result.setData(drugTakeOrderService.listDrugTakeOrder(params));
        result.setTotal(drugTakeOrderService.listDrugTakeOrderCount(params));
        return result;
    }

    @ApiOperation(value = "创建患者取药OK 确认取药完成")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderOk.json", method = {RequestMethod.POST})
    public CommonResponse<DrugTakeOrder> drugTakeOrderOk(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugTakeOrder record) {
        CommonResponse<DrugTakeOrder> result = new CommonResponse<DrugTakeOrder>();
        drugTakeOrderService.drugTakeOrderOk(record);
        return result;
    }
    @ApiOperation(value = "取消预约药房取药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderCancel.json", method = {RequestMethod.POST})
    public CommonResponse<DrugTakeOrder> drugTakeOrderCancel(HttpServletRequest request, HttpServletResponse response,
                                                                @ApiParam(value = "患者取药接口") @RequestBody DrugTakeOrder record) {
        CommonResponse<DrugTakeOrder> result = new CommonResponse<DrugTakeOrder>();
        drugTakeOrderService.drugTakeOrderCancel(record);
        return result;
    }
    @ApiOperation(value = "支付预约药房取药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderPaymentOk.json", method = {RequestMethod.POST})
    public CommonResponse<DrugTakeOrder> drugTakeOrderPaymentOk(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugTakeOrder record) {
        CommonResponse<DrugTakeOrder> result = new CommonResponse<DrugTakeOrder>();
        drugTakeOrderService.drugTakeOrderPaymentOk(record);
        return result;
    }
    @ApiOperation(value = "创建预约药房取药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderCreate.json", method = {RequestMethod.POST})
    public CommonResponse<DrugTakeOrder> drugTakeOrderCreate(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "患者取药接口") @RequestBody DrugTakeOrder record) {
        CommonResponse<DrugTakeOrder> result = new CommonResponse<DrugTakeOrder>();
        result.setData(drugTakeOrderService.drugTakeOrderCreate(record));
        return result;
    }

    @ApiOperation(value = "显示多个处方取药的列表,预约药房取药订单")
    @ApiCheck(check = false)
    @RequestMapping(value = "/drugTakeOrderShow.json", method = {RequestMethod.POST})
    public CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,MutableTriple<Pharmacy,List<MedicalDate>,String>,Integer>> drugTakeOrderShow(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescriptionRequest params) {
        CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,MutableTriple<Pharmacy,List<MedicalDate>,String>,Integer>> result = new CommonResponse<MutableTriple<List<MedicalPrescriptionPo>,MutableTriple<Pharmacy,List<MedicalDate>,String>,Integer>>();
        result.setData(medicalPrescriptionService.drugTakeOrderShow(params));
        return result;
    }


    @ApiOperation(value = "根据药品条件查询药库携带距离信息列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getPharmacyListByLockDrugs.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<PharmacyPo> getPharmacyListByLockDrugs(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "基本请求接口类") @RequestBody MedicalPrescriptionRequest params) {
        ListResponse<PharmacyPo> res = new ListResponse<PharmacyPo>();
        List<PharmacyPo> pharmacyPoList = remoteService.getListPharmaryByLockDrugs(params);
        res.setData(pharmacyPoList);
        res.setTotal(pharmacyPoList.size());
        log.debug("药房列表是："+res.toJsonString());
        return res;
    }

    @ApiOperation(value = "根据条件名字查询药库药品列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getPharmacyDrugsList.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<OrderDrugs> getPharmacyDrugsList(HttpServletRequest request, HttpServletResponse response,@ApiParam(value = "基本请求接口类") @RequestBody OrderDrugsRequest parms){
        ListResponse<OrderDrugs> res = new ListResponse<OrderDrugs>();
        parms.doWithSortOrStart();
        log.info("查询条件是:{}",parms);
        List<OrderDrugs> orderDrugsList = remoteService.getListDrugs(parms);
        res.setData(orderDrugsList);
        res.setTotal(orderDrugsList.size());
        log.info(res.toJsonString());
        return res;
    }

    //---------------------------------------上门就诊-----------------------------------------
    @ApiOperation(value = "1-患者预约上门就诊：创建订单 图片提前成URL -->进入待支付状态 1[待支付]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createAppointment.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createAppointment(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        result.setData(medicalOrderService.createAppointment(record,null));
        return result;
    }

    @ApiOperation(value = "1-患者预约上门就诊：创建订单 整个图片包上传 -->进入待支付状态 1[预约待定]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createAppointmentWithPictureObject.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createAppointmentWithPictureObject(HttpServletRequest request, HttpServletResponse response,
                                                          @ApiParam(value = "上门就诊请求接口，非body体") MedicalOrder record,@RequestParam(value = "file", required = false) MultipartFile[] file) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        log.info("record:{} file:{}",record,file);
        result.setData(medicalOrderService.createAppointment(record,file));
        return result;
    }


    @ApiOperation(value = "2-患者支付成功 -->进入预约成功状态 2[预约待定]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createAppointPaymentOk.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createAppointPaymentOk(HttpServletRequest request, HttpServletResponse response,
                                                  @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        serviceMedicalDateService.paymentOk(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = " 患者支付时间信息 -->查询获取支付剩余时间")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getAppointRemainPaymentTime.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> getAppointRemainPaymentTime(HttpServletRequest request, HttpServletResponse response,
                                                               @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        serviceMedicalDateService.getAppointRemainPaymentTime(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "3-医生确认预约 -->进入确认预约状态 3[预约成功]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createAppointConfirm.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createAppointConfirm(HttpServletRequest request, HttpServletResponse response,
                                                               @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createAppointConfirm(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "4-医生确认预约 -->开始服务  4[到达地点]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createStartService.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createStartService(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createStartService(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "医生患者没有在家  消失掉  预约过期 V [超时未到][超时未在]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPatientDisappearConfirm.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createPatientDisappearConfirm(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createPatientDisappearConfirm(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "5-患者确认预约 -->确认上门  5[开始服务]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createStartServiceConfirm.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createStartServiceConfirm(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createStartServiceConfirm(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "6-医生上门就诊 医生开处方-->处方审核中 6[处理中]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPrescription.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescription> createPrescription(HttpServletRequest request, HttpServletResponse response,
                                                                  @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescription record) {
        CommonResponse<MedicalPrescription> result = new CommonResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.createPrescription(record));
        return result;
    }

    @ApiOperation(value = "6-医生上门就诊-->处方审核中 6 药师抢单审方 ")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPrescriptionGrapCheck.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescription> createPrescriptionGrapCheck(HttpServletRequest request, HttpServletResponse response,
                                                                    @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescription record) {
        CommonResponse<MedicalPrescription> result = new CommonResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.createPrescriptionGrapCheck(record));
        return result;
    }

    @ApiOperation(value = "6-医生上门就诊-->处方审核中 6 药师审方 不通过")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPrescriptionCheckKO.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescription> createPrescriptionCheckKO(HttpServletRequest request, HttpServletResponse response,
                                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescription record) {
        CommonResponse<MedicalPrescription> result = new CommonResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.createPrescriptionCheckKO(record));
        return result;
    }

    @ApiOperation(value = "6-医生上门就诊-->处方审核中 6 药师审方 不通过 --> 医生修改处方")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPrescriptionModify.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescription> createPrescriptionModify(HttpServletRequest request, HttpServletResponse response,
                                                                         @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescription record) {
        CommonResponse<MedicalPrescription> result = new CommonResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.createPrescriptionModify(record));
        return result;
    }

    @ApiOperation(value = "7-医生上门就诊-->处方审核中 药师审方 通过  上门就诊--> 完成 7")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPrescriptionCheckOK.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescription> createPrescriptionCheckOk(HttpServletRequest request, HttpServletResponse response,
                                                                         @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalPrescription record) {
        CommonResponse<MedicalPrescription> result = new CommonResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.createPrescriptionCheckOk(record));
        return result;
    }


    @ApiOperation(value = "X-患者取消 -->进入患者取消状态 X")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPatientCancel.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createPatientCancel(HttpServletRequest request, HttpServletResponse response,
                                                             @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createPatientCancel(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "X-患者取消 -->进入患者取消支付 S[取消支付]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createPatientPaymentCancel.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createPatientPaymentCancel(HttpServletRequest request, HttpServletResponse response,
                                                            @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createPatientPaymentCancel(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "Y-医生取消 -->进入医生取消状态 Y")
    @ApiCheck(check = false)
    @RequestMapping(value = "/createDoctorCancel.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> createDoctorCancel(HttpServletRequest request, HttpServletResponse response,
                                                            @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.createDoctorCancel(record);
        result.setData(record);
        return result;
    }


    @ApiOperation(value = "展现药师抢单审核处方订单列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/listGrapMedicalPrescription.json", method = {RequestMethod.POST})
    public ListResponse<MedicalPrescription> listGrapMedicalPrescription(HttpServletRequest request, HttpServletResponse response,
                                                                         @ApiParam(value = "处方请求接口") @RequestBody MedicalPrescriptionRequest params) {
        ListResponse<MedicalPrescription> result = new ListResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.listMedicalPrescription(params));
        result.setTotal(medicalPrescriptionService.listMedicalPrescriptionCount(params));
        return result;
    }
    @ApiOperation(value = "展现处方订单列表[目前与药师抢单列表相同,药师审方列表,]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/listMedicalPrescription.json", method = {RequestMethod.POST})
    public ListResponse<MedicalPrescription> listMedicalPrescription(HttpServletRequest request, HttpServletResponse response,
                                                                         @ApiParam(value = "处方请求接口") @RequestBody MedicalPrescriptionRequest params) {
        ListResponse<MedicalPrescription> result = new ListResponse<MedicalPrescription>();
        result.setData(medicalPrescriptionService.listMedicalPrescription(params));
        result.setTotal(medicalPrescriptionService.listMedicalPrescriptionCount(params));
        return result;
    }
    @ApiOperation(value = "展现带药品明细及订单信息的处方列表 患者[我的处方][预约取药-预约送药]")
    @ApiCheck(check = false)
    @RequestMapping(value = "/listMedicalPrescriptionPo.json", method = {RequestMethod.POST})
    public ListResponse<MedicalPrescriptionPo> listMedicalPrescriptionPo(HttpServletRequest request, HttpServletResponse response,
                                                                     @ApiParam(value = "处方请求接口") @RequestBody MedicalPrescriptionRequest params) {
        ListResponse<MedicalPrescriptionPo> result = new ListResponse<MedicalPrescriptionPo>();
        result.setData(medicalPrescriptionService.listMedicalPrescriptionPoConsiderDoctorPo(params));
        result.setTotal(medicalPrescriptionService.listMedicalPrescriptionPoCount(params));
        return result;
    }

    @ApiOperation(value = "通过ID等标识信息 获取处方目前信息")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getMedicalPrescriptionPoById.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalPrescriptionPo> getMedicalPrescriptionPoById(HttpServletRequest request, HttpServletResponse response,
                                                                    @ApiParam(value = "处方请求接口") @RequestBody MedicalPrescriptionRequest params) {
        CommonResponse<MedicalPrescriptionPo> result = new CommonResponse<MedicalPrescriptionPo>();
        result.setData(medicalPrescriptionService.getMedicalPrescriptionPoInfoById(params));
        log.debug("详细信息:{} 查询条件:{}",result,params);
        return result;
    }

    @ApiOperation(value = "患者 获取上门就诊列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getListMedicalOrderPoForPatient.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<MedicalOrderPo> listMedicalOrderPoWithDoctorappointmentInfo(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊请求接口类") @RequestBody MedicalOrderRequest params) {
        params.doWithSortOrStart();
        ListResponse<MedicalOrderPo> res = new ListResponse<MedicalOrderPo>();
        List<MedicalOrderPo> list = medicalOrderService.listMedicalOrderPoWithDoctorappointmentInfo(params);
        res.setData(list);
        res.setTotal(list.size());
        log.debug(res.toJsonString());
        return res;
    }
    @ApiOperation(value = "医生 获取上门就诊列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getListMedicalOrderPoForDoctor.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<MedicalOrderPo> getListMedicalOrderPoForDoctor(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊请求接口类") @RequestBody MedicalOrderRequest params) {
        params.doWithSortOrStart();
        ListResponse<MedicalOrderPo> res = new ListResponse<MedicalOrderPo>();
        List<MedicalOrderPo> list = medicalOrderService.listMedicalOrderPoWithPatienOldappointmentInfo(params);
        res.setData(list);
        res.setTotal(list.size());
        log.debug(res.toJsonString());
        return res;
    }

/*    @ApiOperation(value = "插入上门就诊信息")
    @ApiCheck(check = false)
    @RequestMapping(value = "/insertMedicalOrder.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalOrder> insertMedicalOrder(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalOrder record) {
        CommonResponse<MedicalOrder> result = new CommonResponse<MedicalOrder>();
        medicalOrderService.insertSelective(record);
        result.setData(record);
        return result;
    }*/
    @ApiOperation(value = "患者从今天之后的 获取某个医生上门就诊时间列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getDoctorMedicalDatePo.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<MedicalDatePo> getDoctorMedicalDatePo(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊时间请求接口类") @RequestBody MedicalDateRequest params) {
        params.doWithSortOrStart();
        params.setPlanTimeBegin(Utils.getDay(new Date(),0));//从今天算起
        ListResponse<MedicalDatePo> res = serviceMedicalDateService.getDoctorListMedicalDatePo(params);
        log.debug(res.toJsonString());
        return res;
    }
    @ApiOperation(value = "获取上门就诊时间列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getMedicalDatePo.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<MedicalDatePo> getMedicalDatePo(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊时间请求接口类") @RequestBody MedicalDateRequest params) {
        params.doWithSortOrStart();
        ListResponse<MedicalDatePo> res = new ListResponse<MedicalDatePo>();
        List<MedicalDatePo> list = serviceMedicalDateService.listMedicalDatePo(params);
        res.setData(list);
        res.setTotal(serviceMedicalDateService.listMedicalDatePoCount(params));
        log.info(res.toJsonString());
        return res;
    }
    @ApiOperation(value = "医生修改一个上门就诊预约量,价格")
    @ApiCheck(check = false)
    @RequestMapping(value = "/medicalDateEdit.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public CommonResponse<MedicalDate> editMedicalDate(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊时间类") @RequestBody MedicalDate record) {
        CommonResponse<MedicalDate> result = new CommonResponse<MedicalDate>();
        serviceMedicalDateService.editMedicalDate(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "医生删除一个上门就诊时间")
    @ApiCheck(check = false)
    @RequestMapping(value = "/medicalDateDelete.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public CommonResponse<MedicalDate> medicalDateDelete(HttpServletRequest request, HttpServletResponse response, @ApiParam(value = "上门就诊时间类") @RequestBody MedicalDate record) {
        CommonResponse<MedicalDate> result = new CommonResponse<MedicalDate>();
        serviceMedicalDateService.deleteMedicalDate(record);
        result.setData(record);
        return result;
    }
    @ApiOperation(value = "医生安排上门就诊时间列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/insertMedicalDates.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalDatePo> insertMedicalDates(HttpServletRequest request, HttpServletResponse response,
                                                           @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalDatePo record) {
        CommonResponse<MedicalDatePo> result = new CommonResponse<MedicalDatePo>();
        serviceMedicalDateService.insertMedicalDates(record);
        result.setData(record);
        return result;
    }

    @ApiOperation(value = "医生安排一条上门就诊时间(只是一条测试使用)")
    @ApiCheck(check = false)
    @RequestMapping(value = "/insertOnlyOneMedicalDate.json", method = {RequestMethod.POST})
    public CommonResponse<MedicalDate> insertOnlyOneMedicalDate(HttpServletRequest request, HttpServletResponse response,
                                                            @ApiParam(value = "上门就诊请求接口") @RequestBody MedicalDate record) {
        CommonResponse<MedicalDate> result = new CommonResponse<MedicalDate>();
        serviceMedicalDateService.insertOneMedicalDate(record);
        result.setData(record);
        return result;
    }

    //--------------------疾病相关--------------------------
    @ApiOperation(value = "查询疾病列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getListDiseaseCode.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<DiseaseCode> getListDiseaseCode(HttpServletRequest request, HttpServletResponse response,@ApiParam(value = "疾病请求接口") @RequestBody DiseaseCodeRequest params) {
        params.doWithSortOrStart();
        ListResponse<DiseaseCode> res = new ListResponse<DiseaseCode>();
        res.setData(this.diseaseCodeService.listDiseaseCode(params));
        res.setTotal(this.diseaseCodeService.listDiseaseCodeCount(params));
        log.debug(res.toJsonString());
        return res;
    }
    @ApiOperation(value = "查询医生收藏的疾病列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/getListDoctorDisease.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<DoctorDisease> getListDoctorDisease(HttpServletRequest request, HttpServletResponse response,@ApiParam(value = "疾病请求接口") @RequestBody DiseaseCodeRequest params) {
        params.doWithSortOrStart();
        ListResponse<DoctorDisease> res = new ListResponse<DoctorDisease>();
        res.setData(this.doctorDiseaseService.listDoctorDisease(params));
        res.setTotal(this.doctorDiseaseService.listDoctorDiseaseCount(params));
        log.debug(res.toJsonString());
        return res;
    }
    @ApiOperation(value = "考虑收藏疾病列表")
    @ApiCheck(check = false)
    @RequestMapping(value = "/doWithoutDiseaseCode.json", method = {RequestMethod.POST}, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ListResponse<DiseaseCode> doWithoutDiseaseCode(HttpServletRequest request, HttpServletResponse response,@ApiParam(value = "疾病请求接口") @RequestBody DiseaseCodeRequest params) {
        params.doWithSortOrStart();
        ListResponse<DiseaseCode> res = new ListResponse<DiseaseCode>();
        res.setData(this.doctorDiseaseService.doWithoutDiseaseCode(params));
        log.debug(res.toJsonString());
        return res;
    }


}
