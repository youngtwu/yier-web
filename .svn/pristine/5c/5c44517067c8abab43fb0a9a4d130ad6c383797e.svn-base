<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yier.platform.dao.UserWalletSerialMapper">
  <resultMap id="BaseResultMap" type="com.yier.platform.common.model.UserWalletSerial">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="type_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_wallet_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="order_type" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="order_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="amount" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="serial_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creator_type" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="creator_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="status" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="remarks" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, type_id, user_id, user_wallet_id, order_type, order_id, order_no, amount, serial_type, 
    description, creator_type, creator_id, status, gmt_create, gmt_modified, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_user_wallet_serial
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_user_wallet_serial
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yier.platform.common.model.UserWalletSerial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_user_wallet_serial (type_id, user_id, user_wallet_id, 
      order_type, order_id, order_no, 
      amount, serial_type, description, 
      creator_type, creator_id, status, 
      gmt_create, gmt_modified, remarks
      )
    values (#{typeId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{userWalletId,jdbcType=BIGINT}, 
      #{orderType,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{serialType,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{creatorType,jdbcType=BIGINT}, #{creatorId,jdbcType=BIGINT}, #{status,jdbcType=CHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yier.platform.common.model.UserWalletSerial">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_user_wallet_serial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        type_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userWalletId != null">
        user_wallet_id,
      </if>
      <if test="orderType != null">
        order_type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="serialType != null">
        serial_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="creatorType != null">
        creator_type,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userWalletId != null">
        #{userWalletId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        #{orderType,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="serialType != null">
        #{serialType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creatorType != null">
        #{creatorType,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yier.platform.common.model.UserWalletSerial">
    update p_user_wallet_serial
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userWalletId != null">
        user_wallet_id = #{userWalletId,jdbcType=BIGINT},
      </if>
      <if test="orderType != null">
        order_type = #{orderType,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="serialType != null">
        serial_type = #{serialType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creatorType != null">
        creator_type = #{creatorType,jdbcType=BIGINT},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yier.platform.common.model.UserWalletSerial">
    update p_user_wallet_serial
    set type_id = #{typeId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      user_wallet_id = #{userWalletId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=BIGINT},
      order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      serial_type = #{serialType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      creator_type = #{creatorType,jdbcType=BIGINT},
      creator_id = #{creatorId,jdbcType=BIGINT},
      status = #{status,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>