<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yier.platform.dao.PharmacistEvaluationMapper">
  <resultMap id="BaseResultMap" type="com.yier.platform.common.model.PharmacistEvaluation">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="patient_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="doctor_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type_ids" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_modified" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="remarks" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, patient_id, doctor_id, content, type_ids, status, gmt_create, gmt_modified, remarks
  </sql>







  <select id="getPharmacistEvaluationPoWithPharmacistById" parameterType="java.lang.Long" resultMap="getEvaluationWithPharmacistContentMap">
    select p.true_name patientName,p.avatar_url patientAvatarUrl,t.id, t.patient_id patientId, t.doctor_id doctorId, t.content, t.type_ids typeIds, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_pharmacist_evaluation t LEFT JOIN t_patient p ON t.patient_id = p.id
    where t.id = #{id,jdbcType=BIGINT}
  </select>
  <!-- 定义评价数据库字段与实体对象的映射关系  -->
  <resultMap type="com.yier.platform.common.model.PharmacistEvaluationPo" id="getEvaluationWithPharmacistContentMap">
    <id column="patientName" property="patientName" />
    <result column="patientAvatarUrl" property="patientAvatarUrl" />
    <result column="id" property="id" />
    <result column="patientId" property="patientId" />
    <result column="doctorId" property="doctorId" />
    <result column="content" property="content" />
    <result column="typeIds" property="typeIds" />
    <result column="status" property="status" />
    <result column="gmtCreate" property="gmtCreate" />
    <result column="gmtModified" property="gmtModified" />
    <result column="remarks" property="remarks" />
    <!-- 一对一的关系 -->
    <!-- property: 指的是属性的值, javaType：指的是元素的类型 -->
    <association property="doctorPo" column="doctorId" javaType="com.yier.platform.common.model.PharmacistPo"  select="getPharmacistPoById">
      <id column="customerId" property="customerId" /> <!-- 多余的 -->
      <result column="customerName" property="customerName" />
      <result column="customerTel" property="customerTel" />
    </association>
  </resultMap>


  <!-- 定义药师数据库字段与实体对象的映射关系  -->
  <resultMap type="com.yier.platform.common.model.PharmacistPo" id="getPharmacistPoByIdMap">
    <id column="doctorTitle" property="doctorTitle" />
    <result column="trueName" property="trueName" />
    <result column="id" property="id" />
    <result column="avatarUrl" property="avatarUrl" />
    <result column="idCardNo" property="idCardNo" />
    <result column="phoneNumber" property="phoneNumber" />
    <result column="departmentId" property="departmentId" />
    <result column="titleId" property="titleId" />
    <result column="field" property="field" />
    <result column="visit" property="visit" />
    <result column="practicePoint" property="practicePoint" />
    <result column="imtoken" property="imtoken" />
    <result column="doctorCardNo" property="doctorCardNo" />
    <result column="hospitalId" property="hospitalId" />
    <result column="catalogId" property="catalogId" />
    <result column="birthday" property="birthday" />
    <result column="sex" property="sex" />
    <result column="chat" property="chat" />
    <result column="checkUrl" property="checkUrl" />
    <result column="photoUrl" property="photoUrl" />
    <result column="status" property="status" />
    <result column="gmtCreate" property="gmtCreate" />
    <result column="gmtModified" property="gmtModified" />
    <result column="remarks" property="remarks" />
    <!-- 一对一的关系 -->
    <!-- property: 指的是属性的值, javaType：指的是元素的类型 -->
    <!--<association property="hospitalDepartmentPo" column="departmentId" javaType="com.yier.platform.common.model.HospitalDepartmentPo"  select="getHospitalDepartmentPoForPharmacistById"/>-->
    <association property="hospitalDepartmentPo" column="catalogId" javaType="com.yier.platform.common.model.HospitalDepartmentPo"  select="getHospitalCatalogPoForPharmacistById"/>
  </resultMap>

  <!-- 根据条件Id查询大科室关联的医院及主分类信息 -->
  <select id="getHospitalCatalogPoForPharmacistById" parameterType="java.lang.Long" resultType="com.yier.platform.common.model.HospitalDepartmentPo">
    SELECT hl.`name` levelInfo,h.`name` hospitalName,  t.`name` catalogName,0 id,'' name,t.hospital_id hospitalId,t.id catalogId,t.display_order displayOrder, t.flag, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_department_catalog t LEFT JOIN t_hospital h ON t.hospital_id = h.id LEFT JOIN t_hospital_level hl ON h.level_id = hl.id
    where t.id = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据条件Id查询小科室关联的医院及主分类信息 -->
  <select id="getHospitalDepartmentPoForPharmacistById" parameterType="java.lang.Long" resultType="com.yier.platform.common.model.HospitalDepartmentPo">
    select h.`name` hospitalName,  dc.`name` catalogName,t.id, t.name, t.hospital_id hospitalId, t.catalog_id catalogId, t.display_order displayOrder, t.flag, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_hospital_department t LEFT JOIN t_hospital h ON t.hospital_id = h.id LEFT JOIN t_department_catalog dc ON t.catalog_id = dc.id
    where t.id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getPharmacistPoById" parameterType="java.lang.Long"  resultMap="getPharmacistPoByIdMap">
    select dt.`name` doctorTitle ,t.imtoken,t.doctor_card_no doctorCardNo, t.hospital_id hospitalId, t.catalog_id catalogId ,t.birthday,
    t.sex, t.chat, t.check_url checkUrl, t.photo_url photoUrl, t.id, t.true_name trueName, t.avatar_url avatarUrl, t.id_card_no idCardNo, t.phone_number phoneNumber, t.pass_hash passHash, t.pass_salt passSalt, t.department_id departmentId,
    t.title_id titleId, t.field, t.visit, t.practice_point practicePoint, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified,t.profile, t.remarks
    from t_pharmacist t LEFT JOIN t_pharmacist_title dt ON t.title_id = dt.id
    where t.id = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据条件查询列表 -->
  <select id="listEvaluationWithPharmacistContent" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultMap="getEvaluationWithPharmacistContentMap">
    select p.true_name patientName,p.avatar_url patientAvatarUrl,t.id, t.patient_id patientId, t.doctor_id doctorId, t.content, t.type_ids typeIds, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_pharmacist_evaluation t LEFT JOIN t_patient p ON t.patient_id = p.id LEFT JOIN t_pharmacist d ON t.doctor_id = d.id
    <where>
      <if test="pharmacistEvaluationId != null">
        and t.id = #{pharmacistEvaluationId}
      </if>
      <if test="pharmacistId != null">
        and t.doctor_id = #{pharmacistId}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( pharmacistName )">
        and (d.`true_name` like concat('%',#{pharmacistName},'%') )
      </if>
      <if test="patientId != null">
        and t.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and t.status = #{status}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( typeId )">
        and (t.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (t.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
    <choose>
      <when test="sort!=null and order!=null">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by t.id desc
      </otherwise>
    </choose>
    <choose>
      <when test="start!=null and size!=null">
        limit #{start},#{size}
      </when>
      <when test="start==null and size!=null">
        limit #{size}
      </when>
    </choose>
  </select>
  <!-- 根据条件查询列表 总和 -->
  <select id="listEvaluationWithPharmacistContentCount" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultType="Integer">
    select count(t.id) from t_pharmacist_evaluation t LEFT JOIN t_pharmacist d ON t.doctor_id = d.id
    <where>
      <if test="pharmacistEvaluationId != null">
        and t.id = #{pharmacistEvaluationId}
      </if>
      <if test="pharmacistId != null">
        and t.doctor_id = #{pharmacistId}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( pharmacistName )">
        and (d.`true_name` like concat('%',#{pharmacistName},'%') )
      </if>
      <if test="patientId != null">
        and t.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and t.status = #{status}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( typeId )">
        and (t.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (t.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
  </select>


  <!-- 根据条件查询列表 -->
  <select id="listEvaluationWithGroupPharmacistContent" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultMap="getEvaluationWithPharmacistContentMap">
    SELECT p.true_name patientName,p.avatar_url patientAvatarUrl,t.id, t.patient_id patientId, t.doctor_id doctorId, t.content, t.type_ids typeIds, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_pharmacist_evaluation t
    INNER JOIN (
    SELECT MAX(evaluation.id) id,evaluation.patient_id,evaluation.doctor_id from t_pharmacist_evaluation evaluation LEFT JOIN t_pharmacist dt ON evaluation.doctor_id = dt.id
    <where>
      <if test="pharmacistEvaluationId != null">
        and evaluation.id = #{doctorEvaluationId}
      </if>
      <if test="pharmacistId != null">
        and evaluation.doctor_id = #{pharmacistId}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( pharmacistName )">
        and (dt.`true_name` like concat('%',#{pharmacistName},'%') )
      </if>
      <if test="patientId != null">
        and evaluation.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and evaluation.status = #{status}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( typeId )">
        and (evaluation.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (evaluation.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
    GROUP BY evaluation.patient_id,evaluation.doctor_id) evaluationGroup
    ON t.id = evaluationGroup.id
    LEFT JOIN t_patient p ON t.patient_id = p.id LEFT JOIN t_pharmacist d ON t.doctor_id = d.id
    <choose>
      <when test="sort!=null and order!=null">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by t.id desc
      </otherwise>
    </choose>
    <choose>
      <when test="start!=null and size!=null">
        limit #{start},#{size}
      </when>
      <when test="start==null and size!=null">
        limit #{size}
      </when>
    </choose>
  </select>
  <!-- 根据条件查询列表 总和 -->
  <select id="listEvaluationWithGroupPharmacistContentCount" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultType="Integer">
    select count(t.id) from t_pharmacist_evaluation t
    INNER JOIN (
    SELECT MAX(evaluation.id) id,evaluation.patient_id,evaluation.doctor_id from t_pharmacist_evaluation evaluation LEFT JOIN t_pharmacist dt ON evaluation.doctor_id = dt.id
    <where>
      <if test="pharmacistEvaluationId != null">
        and evaluation.id = #{doctorEvaluationId}
      </if>
      <if test="pharmacistId != null">
        and evaluation.doctor_id = #{pharmacistId}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( pharmacistName )">
        and (dt.`true_name` like concat('%',#{pharmacistName},'%') )
      </if>
      <if test="patientId != null">
        and evaluation.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and evaluation.status = #{status}
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( typeId )">
        and (evaluation.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (evaluation.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
    GROUP BY evaluation.patient_id,evaluation.doctor_id) evaluationGroup
    ON t.id = evaluationGroup.id
  </select>

  <!-- 根据条件查询列表 -->
  <select id="listPharmacistEvaluationPo" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultType="com.yier.platform.common.model.PharmacistEvaluationPo">
    select p.true_name patientName,p.avatar_url patientAvatarUrl,t.id, t.patient_id patientId, t.doctor_id doctorId, t.content, t.type_ids typeIds, t.status, t.gmt_create gmtCreate, t.gmt_modified gmtModified, t.remarks
    from t_pharmacist_evaluation t LEFT JOIN t_patient p ON t.patient_id = p.id
    <where>
      <if test="pharmacistId != null">
        and t.doctor_id = #{pharmacistId}
      </if>
      <if test="patientId != null">
        and t.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and t.status = #{status}
      </if>
      <if test="typeId != null">
        and (t.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (t.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
    <choose>
      <when test="sort!=null and order!=null">
        order by ${sort} ${order}
      </when>
      <otherwise>
        order by t.id desc
      </otherwise>
    </choose>
    <choose>
      <when test="start!=null and size!=null">
        limit #{start},#{size}
      </when>
      <when test="start==null and size!=null">
        limit #{size}
      </when>
    </choose>
  </select>
  <!-- 根据条件查询列表 总和 -->
  <select id="listPharmacistEvaluationPoCount" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultType="Integer">
    select count(t.id) from t_pharmacist_evaluation t
    <where>
      <if test="pharmacistId != null">
        and t.doctor_id = #{pharmacistId}
      </if>
      <if test="patientId != null">
        and t.patient_id = #{patientId}
      </if>
      <if test="status != null">
        and t.status = #{status}
      </if>
      <if test="typeId != null">
        and (t.`type_ids` like concat('%',#{typeId},'%') )
      </if>
      <if test="@org.apache.commons.lang3.StringUtils@isNotBlank( searchKey )">
        and (t.`content` like concat('%',#{searchKey},'%')
        )
      </if>
    </where>
  </select>


  <!-- 根据名字模糊查询对应的名字列表 -->
  <select id="getPharmacistEvaluationList" parameterType="com.yier.platform.common.requestParam.PharmacistRequest" resultType="String">
    SELECT GROUP_CONCAT(t.type_ids) from t_pharmacist_evaluation t
    <where>
      <if test="pharmacistId != null">
        and t.doctor_id = #{pharmacistId}
      </if>
      <if test="status != null">
        and t.status = #{status}
      </if>
    </where>
    GROUP BY t.doctor_id  LIMIT 1
  </select>














  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pharmacist_evaluation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_pharmacist_evaluation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yier.platform.common.model.PharmacistEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_pharmacist_evaluation (patient_id, doctor_id, content, 
      type_ids, status, gmt_create, 
      gmt_modified, remarks)
    values (#{patientId,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{typeIds,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yier.platform.common.model.PharmacistEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_pharmacist_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="typeIds != null">
        type_ids,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        #{patientId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeIds != null">
        #{typeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yier.platform.common.model.PharmacistEvaluation">
    update t_pharmacist_evaluation
    <set>
      <if test="patientId != null">
        patient_id = #{patientId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeIds != null">
        type_ids = #{typeIds,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yier.platform.common.model.PharmacistEvaluation">
    update t_pharmacist_evaluation
    set patient_id = #{patientId,jdbcType=BIGINT},
      doctor_id = #{doctorId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      type_ids = #{typeIds,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>